{% comment %} Custom Header Section {% endcomment %}
<header class="header" data-fls-header data-fls-header-scroll="80" data-fls-header-scroll-show>
  <div class="header__container">
    <div class="header__content">
      <div class="header__menu menu">
        <button type="button" data-fls-menu class="menu__icon icon-menu">
          <span></span>
        </button>
		
        <nav class="menu__body">
          <ul class="menu__list">
            {% assign menu = linklists[section.settings.main_menu] %}
            {% for link in menu.links %}
              {% assign submenu_block = null %}
              {% for block in section.blocks %}
                {% if block.settings.menu_item_title == link.title %}
                  {% assign submenu_block = block %}
                  {% break %}
                {% endif %}
			{% endfor %}

              <li class="menu__item {% if link.links.size > 0 %}menu__item--parent{% endif %}">
                <a href="{{ link.url }}" class="menu__link">{{ link.title }}</a>

                {% if link.links.size > 0 %}
                  <span class="menu__arrow-submenu --icon-arrow"></span>
                  <div class="menu__submenu submenu-header">
                    <div class="submenu-header__content">
                      <div class="submenu-header__left">
                        <ul class="submenu-header__list-extra">
                          {% for sublink in link.links %}
                            <li class="submenu-header__item-extra{% if forloop.index > 1 %} submenu-header__item-extra--hidden{% endif %}">
                              <a href="{{ sublink.url }}" class="submenu-header__link-extra">{{ sublink.title }}</a>
                            </li>
                          {% endfor %}
                        </ul>
                        {% if submenu_block and submenu_block.settings.subtitle != blank %}
                          <div class="submenu-header__title">{{ submenu_block.settings.subtitle }}</div>
                        {% endif %}
                      </div>

                      {% if submenu_block and submenu_block.settings.image != blank %}
                        <div class="submenu-header__right">
                          <a href="{{ link.url }}" class="submenu-header__link">
                            <img class="submenu-header__image ibg"
                                 src="{{ submenu_block.settings.image | image_url }}"
                                 alt="{{ submenu_block.settings.image.alt }}">
                          </a>
                        </div>
                      {% endif %}
                    </div>
                  </div>
                {% endif %}
              </li>
            {% endfor %}

            <li class="menu__item menu__item--user"></li>
          </ul>

          <ul class="menu__lang-list">
            {% for locale in localization.available_languages %}
              <li class="menu__lang-item">
                <a href="#" class="{% if locale.iso_code == localization.language.iso_code %}menu__lang-current{% else %}menu__lang-link{% endif %}">
                  {{ locale.iso_code | upcase }}
                </a>
              </li>
            {% endfor %}
          </ul>
        </nav>
      </div>

      <div class="header__logo-block">
        <a href="{{ routes.root_url }}" class="header__logo">
          {% if section.settings.logo != blank %}
            <img src="{{ section.settings.logo | image_url }}" alt="{{ section.settings.logo.alt }}">
          {% else %}
            {{ shop.name }}
          {% endif %}
        </a>
      </div>

      <div class="header__actions actions-header">
        <select class="actions-header__lang" name="form[]" data-fls-select data-fls-select-modif="form">
          {% for locale in localization.available_languages %}
            <option value="{{ locale.iso_code | downcase }}" {% if locale.iso_code == localization.language.iso_code %}selected{% endif %}>
              {{ locale.iso_code | upcase }}
            </option>
          {% endfor %}
        </select>

        <div class="actions-header__icons">
			<a href="{% if customer %}{{ routes.account_url }}#saved{% else %}{{ section.settings.wishlist_url }}{% endif %}" class="actions-header__bookmarks">
				{% render 'wishlist-icon' %}
			</a>
          	<a href="{{ routes.account_url }}" data-fls-dynamic=".menu__item--user, 768" class="actions-header__user">
				{% render 'user-icon' %}
				Log in
			</a>
			<button type="button" class="actions-header__cart">
				{% render 'cart-icon' %}
			</button>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // ===== КОНФІГ =====
  const DEFAULT_LOCALE = 'en';
  const EU_MARKET_COUNTRY = 'BE';     
  const SUPPORTED_LOCALES = new Set(['en','de','pl']);

  // ===== ХЕЛПЕРИ =====
  const stripLocaleFromPath = (p) => p.replace(/^\/[a-z]{2}(\/|$)/, '/');
  const getCurrentLocale = () => (Shopify.locale || '').toLowerCase();
  const getCurrentCountry = () => (document.documentElement.getAttribute('data-country') || '').toUpperCase();

  const buildUrl = (locale, country) => {
    const path = stripLocaleFromPath(location.pathname);
    const qs = new URLSearchParams(location.search);
    if (country) qs.set('country', country);
    const prefix = (locale && locale !== DEFAULT_LOCALE) ? `/${locale}` : '';
    return `${prefix}${path}${qs.toString() ? `?${qs}` : ''}`;
  };

  const safeRedirect = (url) => {
    const key = 'wm_geo_applied';
    if (sessionStorage.getItem(key) === url) return;
    sessionStorage.setItem(key, url);
    location.href = url;
  };

  const decideByCountry = (cc) => {
    if (cc === 'DE') return { locale: 'de', country: 'DE' };
    if (cc === 'PL') return { locale: 'pl', country: 'PL' };
    return { locale: 'en', country: EU_MARKET_COUNTRY }; // інші країни
  };

  // IP → country, фолбек за мовою браузера
  const detectCountry = async () => {
    try {
      const r = await fetch('https://ipapi.co/json/', { cache: 'no-store' });
      if (!r.ok) throw 0;
      const j = await r.json();
      return String(j.country || '').toUpperCase(); // ISO2
    } catch {
      const lang = (navigator.languages && navigator.languages[0]) || navigator.language || '';
      const iso2 = lang.slice(0,2).toLowerCase();
      if (iso2 === 'de') return 'DE';
      if (iso2 === 'pl') return 'PL';
      return EU_MARKET_COUNTRY;
    }
  };

  // ===== РУЧНІ ПЕРЕМИКАЧІ =====
  // select.actions-header__lang
  document.addEventListener('selectCallback', (e) => {
    const select = e?.detail?.select || e.target;
    if (!select || !select.matches('select.actions-header__lang')) return;
    const loc = (select.value || '').toLowerCase().trim();
    if (!SUPPORTED_LOCALES.has(loc)) return;
    const target = (loc === 'de') ? { locale:'de', country:'DE' }
                 : (loc === 'pl') ? { locale:'pl', country:'PL' }
                 : { locale:'en', country: EU_MARKET_COUNTRY };

    if (getCurrentLocale() === target.locale) {
      const q = new URLSearchParams(location.search);
      if ((q.get('country') || '').toUpperCase() === target.country) return;
    }
    safeRedirect(buildUrl(target.locale, target.country));
  });

  // посилання мов у меню
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.menu__lang-list a, .menu__lang-item a').forEach((a) => {
      a.addEventListener('click', (ev) => {
        ev.preventDefault();
        const text = a.textContent.trim().toLowerCase();
        const loc = SUPPORTED_LOCALES.has(text) ? text : DEFAULT_LOCALE;
        const target = (loc === 'de') ? { locale:'de', country:'DE' }
                     : (loc === 'pl') ? { locale:'pl', country:'PL' }
                     : { locale:'en', country: EU_MARKET_COUNTRY };
        safeRedirect(buildUrl(target.locale, target.country));
      });
    });
  });

  // ===== АВТО‑ГЕО (1 раз за сесію) =====
  (async () => {
    if (sessionStorage.getItem('wm_geo_applied')) return;
    const curLoc = getCurrentLocale();
    const curC   = getCurrentCountry();

    const cc = await detectCountry();
    const target = decideByCountry(cc);

    if (target.locale === curLoc) {
      const q = new URLSearchParams(location.search);
      if ((q.get('country') || '').toUpperCase() === target.country) return;
    }
    safeRedirect(buildUrl(target.locale, target.country));
  })();
</script>


{% schema %}
{
  "name": "Custom Header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "link_list",
      "id": "main_menu",
      "label": "Main menu"
    },
    {
      "type": "url",
      "id": "wishlist_url",
      "label": "Wishlist URL"
    }
  ],
  "blocks": [
    {
      "type": "menu_image",
      "name": "Submenu content",
      "settings": [
        {
          "type": "text",
          "id": "menu_item_title",
          "label": "Menu item title",
          "info": "Must match a top-level menu item title"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Submenu image"
        },
        {
          "type": "text",
          "id": "subtitle",
          "label": "Submenu subtitle"
        }
      ]
    }
  ],
  "max_blocks": 10,
  "presets": [
    {
      "name": "Custom Header",
      "category": "Header"
    }
  ]
}
{% endschema %}
